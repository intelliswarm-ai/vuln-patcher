name: Test VulnPatcher

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        java-version: [17, 21]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
    
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Set test environment variables
      run: |
        echo "OLLAMA_BASE_URL=http://localhost:11434" >> $GITHUB_ENV
        echo "SKIP_OLLAMA_TESTS=true" >> $GITHUB_ENV
        echo "CI_ENVIRONMENT=true" >> $GITHUB_ENV
    
    - name: Set up test environment
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        CVE_API_KEY: ${{ secrets.CVE_API_KEY }}
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      run: |
        echo "Setting up test environment variables"
        echo "GITHUB_TOKEN=$GITHUB_TOKEN" >> $GITHUB_ENV
        echo "CVE_API_KEY=$CVE_API_KEY" >> $GITHUB_ENV
        echo "SNYK_TOKEN=$SNYK_TOKEN" >> $GITHUB_ENV
        echo "OLLAMA_BASE_URL=http://localhost:11434" >> $GITHUB_ENV
    
    - name: Run unit tests
      run: mvn clean test -Dtest="!*IT" -DfailIfNoTests=false
      
    - name: Run integration tests
      run: mvn test -Dtest="*IT" -DfailIfNoTests=false || true
      continue-on-error: true
    
    - name: Generate test report
      run: mvn surefire-report:report
      if: always()
    
    - name: Generate coverage report
      run: mvn jacoco:report
      if: always()
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./target/site/jacoco/jacoco.xml
        flags: unittests
        name: codecov-umbrella
        token: ${{ secrets.CODECOV_TOKEN }}
      if: matrix.java-version == '17'
    
    - name: Check code coverage
      run: |
        mvn jacoco:check || echo "Coverage check failed"
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-java-${{ matrix.java-version }}
        path: |
          target/surefire-reports/
          target/site/jacoco/
    
    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: |
          target/surefire-reports/*.xml
          
  security-scan:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
        
    - name: OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'vuln-patcher'
        path: '.'
        format: 'HTML'
        args: >
          --enableRetired
          
    - name: Upload dependency check results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: dependency-check-report
        path: reports/

  build-native:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up GraalVM
      uses: graalvm/setup-graalvm@v1
      with:
        java-version: '17'
        distribution: 'graalvm'
        github-token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build native executable
      run: |
        mvn clean package -Pnative -DskipTests || echo "Native build failed - continuing"
        
    - name: Test native executable
      run: |
        if [ -f "target/vuln-patcher-*-runner" ]; then
          ./target/vuln-patcher-*-runner --version
        fi
      continue-on-error: true